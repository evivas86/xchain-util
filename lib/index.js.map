{"version":3,"file":"index.js","sources":["../src/async.ts","../src/bn.ts","../src/chain.ts","../src/string.ts","../src/types/amount.ts","../src/asset.ts","../node_modules/tslib/tslib.es6.js","../src/midgard.ts"],"sourcesContent":["/**\r\n * Helper to delay anything within an `async` function\r\n *\r\n * @param ms delay in milliseconds\r\n *\r\n * @example\r\n *\r\n * ```\r\n * const anyAsyncFunc = async () => {\r\n *  // do something\r\n *  console.log('before delay')\r\n *  // wait for 200ms\r\n *  await delay(200)\r\n *  // and do other things\r\n *  console.log('after delay')\r\n * }\r\n * ```\r\n */\r\nexport const delay = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms))\r\n","import BigNumber from 'bignumber.js'\r\n\r\n/**\r\n * Shortcut to create a BigNumber\r\n *\r\n * @param {string | number | BigNumber.Instance} value\r\n * @returns {BigNumber} The BigNumber interface from the given value.\r\n */\r\nconst bn = (value: BigNumber.Value) => new BigNumber(value)\r\n\r\n/**\r\n * Helper to check whether a BigNumber is valid or not\r\n *\r\n * @param {BigNumber} value\r\n * @returns {boolean} `true` or `false`.\r\n * */\r\nexport const isValidBN = (value: BigNumber) => !value.isNaN()\r\n\r\n/**\r\n * Helper to create a big number from string or number\r\n * If it fails to create a big number, a big number with value 0 will be returned instead\r\n *\r\n * @param {string|number|undefined} value\r\n * @returns {BigNumber} The BigNumber interface from the given value. If invalid one is provided, will return `0`.\r\n * */\r\nexport const bnOrZero = (value: string | number | undefined) => {\r\n  const b = value ? bn(value) : bn(0)\r\n  return isValidBN(b) ? b : bn(0)\r\n}\r\n\r\n/**\r\n * Helper to validate a possible BigNumber\r\n * If the given value is invalid or undefined, 0 is returned as a BigNumber\r\n *\r\n * @param {BigNumber|undefined} value\r\n * @returns {boolean} `true` or `false`.\r\n */\r\nexport const validBNOrZero = (value: BigNumber | undefined) => (value && isValidBN(value) ? value : bn(0))\r\n\r\n/**\r\n * Format a BaseNumber to a string depending on given decimal places\r\n *\r\n * @param {BigNumber} value\r\n * @param {number} decimal The decimal place. (optional)\r\n * @returns {string} The formatted string from the given BigNumber and decimal place.\r\n * */\r\nexport const formatBN = (value: BigNumber, decimal = 2) => value.toFormat(decimal)\r\n\r\n/**\r\n * The enumuration for symbol position.\r\n * `before` or `after`\r\n */\r\nexport enum SymbolPosition {\r\n  BEFORE = 'before',\r\n  AFTER = 'after',\r\n}\r\n/**\r\n * Formats a big number value by prefixing it with `$`\r\n *\r\n * @param {BigNumber} n\r\n * @param {number} decimalPlaces The decimal place. (optional)\r\n * @param {string} symbol The currency symbol. (optional)\r\n * @param {position} position The symbol position. (optional)\r\n * @returns {string} The formatted string from the given BigNumber, decimal places, symbol and position.\r\n */\r\nexport const formatBNCurrency = (\r\n  n: BigNumber,\r\n  decimalPlaces = 2,\r\n  symbol = '$',\r\n  position: SymbolPosition = SymbolPosition.BEFORE,\r\n) => {\r\n  const value = formatBN(n, decimalPlaces)\r\n  if (position === SymbolPosition.BEFORE) {\r\n    return `${symbol}${value}`\r\n  }\r\n  return `${value}${symbol}`\r\n}\r\n\r\n/**\r\n * Helper to get a fixed `BigNumber`\r\n * Returns zero `BigNumber` if `value` is invalid\r\n *\r\n * @param {number|string|BigNumber|undefined} value\r\n * @param {number} decimalPlaces The decimal place. (optional)\r\n * @returns {BigNumber} The BigNumber interface from the given value and decimal.\r\n * */\r\nexport const fixedBN = (value: BigNumber.Value | undefined, decimalPlaces = 2): BigNumber => {\r\n  const n = bn(value || 0)\r\n  const fixedBN = isValidBN(n) ? n.toFixed(decimalPlaces) : bn(0).toFixed(decimalPlaces)\r\n  return bn(fixedBN)\r\n}\r\n\r\nexport default bn\r\n","export enum Chain {\r\n  Binance = 'BNB',\r\n  Bitcoin = 'BTC',\r\n  Ethereum = 'ETH',\r\n  THORChain = 'THOR',\r\n  Cosmos = 'GAIA',\r\n  Polkadot = 'POLKA',\r\n  BitcoinCash = 'BCH',\r\n  Litecoin = 'LTC',\r\n  Terra = 'TERRA',\r\n  Doge = 'DOGE',\r\n}\r\n\r\nexport const BNBChain = Chain.Binance\r\nexport const BTCChain = Chain.Bitcoin\r\nexport const ETHChain = Chain.Ethereum\r\nexport const THORChain = Chain.THORChain\r\nexport const CosmosChain = Chain.Cosmos\r\nexport const PolkadotChain = Chain.Polkadot\r\nexport const BCHChain = Chain.BitcoinCash\r\nexport const LTCChain = Chain.Litecoin\r\nexport const TerraChain = Chain.Terra\r\nexport const DOGEChain = Chain.Doge\r\n\r\n/**\r\n * Type guard to check whether string  is based on type `Chain`\r\n *\r\n * @param {string} c The chain string.\r\n * @returns {boolean} `true` or `false`\r\n */\r\nexport const isChain = (c: string): c is Chain => (Object.values(Chain) as string[]).includes(c)\r\n\r\n/**\r\n * Convert chain to string.\r\n *\r\n * @param {Chain} chainId.\r\n * @returns {string} The string based on the given chain type.\r\n */\r\nexport const chainToString: ((chainId: Chain) => string) & Record<Chain, string> = Object.assign(\r\n  (chainId: Chain) => {\r\n    if (!(chainId in chainToString)) return 'unknown chain'\r\n    return chainToString[chainId]\r\n  },\r\n  {\r\n    [Chain.THORChain]: 'Thorchain',\r\n    [Chain.Bitcoin]: 'Bitcoin',\r\n    [Chain.BitcoinCash]: 'Bitcoin Cash',\r\n    [Chain.Litecoin]: 'Litecoin',\r\n    [Chain.Ethereum]: 'Ethereum',\r\n    [Chain.Binance]: 'Binance Chain',\r\n    [Chain.Cosmos]: 'Cosmos',\r\n    [Chain.Polkadot]: 'Polkadot',\r\n    [Chain.Terra]: 'Terra',\r\n    [Chain.Doge]: 'Dogecoin',\r\n  },\r\n)\r\n","/**\r\n * Removes leading / trailing zeros from a string of numbers\r\n * (1) Regex to remove trailing zeros https://stackoverflow.com/a/53397618/2032698\r\n * (2) Regex to remove leading zeros https://www.oreilly.com/library/view/regular-expressions-cookbook/9781449327453/ch06s06.html\r\n *\r\n * @param {string} value\r\n * @returns {string} The result after removing trailing zeros.\r\n */\r\nexport const trimZeros = (value: string) =>\r\n  value\r\n    // (1) remove trailing zeros\r\n    .replace(/(\\.[0-9]*[1-9])0+$|\\.0*$/, '$1')\r\n    // (2) remove leading zeros\r\n    .replace(/\\b0*([1-9][0-9]*|0)\\b/, '$1')\r\n","import BigNumber from 'bignumber.js'\r\n\r\nexport enum Denomination {\r\n  /**\r\n   * values for asset amounts in base units (no decimal)\r\n   */\r\n  Base = 'BASE',\r\n  /**\r\n   * values of asset amounts (w/ decimal)\r\n   */\r\n  Asset = 'ASSET',\r\n}\r\n\r\nexport type Amount<T> = T extends Denomination\r\n  ? {\r\n      type: T\r\n      amount: () => BigNumber\r\n      plus: (value: BigNumber.Value | Amount<T>, decimal?: number) => Amount<T>\r\n      minus: (value: BigNumber.Value | Amount<T>, decimal?: number) => Amount<T>\r\n      times: (value: BigNumber.Value | Amount<T>, decimal?: number) => Amount<T>\r\n      div: (value: BigNumber.Value | Amount<T>, decimal?: number) => Amount<T>\r\n      gt: (value: BigNumber.Value | Amount<T>) => boolean\r\n      gte: (value: BigNumber.Value | Amount<T>) => boolean\r\n      lt: (value: BigNumber.Value | Amount<T>) => boolean\r\n      lte: (value: BigNumber.Value | Amount<T>) => boolean\r\n      eq: (value: BigNumber.Value | Amount<T>) => boolean\r\n      decimal: number\r\n    }\r\n  : never\r\n\r\nexport type BaseAmount = Amount<Denomination.Base>\r\nexport type AssetAmount = Amount<Denomination.Asset>\r\n","import BigNumber from 'bignumber.js'\r\n\r\nimport { fixedBN, formatBN } from './bn'\r\nimport { Chain, isChain } from './chain'\r\nimport { trimZeros as trimZerosHelper } from './string'\r\nimport { Amount, Asset, AssetAmount, BaseAmount, Denomination } from './types'\r\n\r\n/**\r\n * Guard to check whether value is a BigNumber.Value or not\r\n *\r\n * @param {unknown} v\r\n * @returns {boolean} `true` or `false`.\r\n * */\r\nexport const isBigNumberValue = (v: unknown): v is BigNumber.Value =>\r\n  typeof v === 'string' || typeof v === 'number' || v instanceof BigNumber\r\n\r\n/**\r\n * Default number of asset decimals\r\n * For history reason and by starting the project on Binance chain assets, it's 8 decimal.\r\n *\r\n * For example:\r\n * ```\r\n * RUNE has a maximum of 8 digits of decimal\r\n * 0.00000001 RUNE == 1 รฐ (tor)\r\n * ```\r\n * */\r\nconst ASSET_DECIMAL = 8\r\n\r\n/**\r\n * Factory to create values of assets (e.g. RUNE)\r\n *\r\n * @param {string|number|BigNumber|undefined} value - The asset amount, If the value is undefined, AssetAmount with value `0` will be returned.\r\n * @param {number} decimal The decimal places. (optional)\r\n * @returns {AssetAmount} The asset amount from the given value and decimal.\r\n *\r\n **/\r\nexport const assetAmount = (value: BigNumber.Value | undefined, decimal: number = ASSET_DECIMAL): AssetAmount => {\r\n  const amount = fixedBN(value, decimal)\r\n  return {\r\n    type: Denomination.Asset,\r\n    amount: () => amount,\r\n    plus: (v: BigNumber.Value | AssetAmount, d: number = decimal) =>\r\n      assetAmount(amount.plus(isBigNumberValue(v) ? v : v.amount()), d),\r\n    minus: (v: BigNumber.Value | AssetAmount, d: number = decimal) =>\r\n      assetAmount(amount.minus(isBigNumberValue(v) ? v : v.amount()), d),\r\n    times: (v: BigNumber.Value | AssetAmount, d: number = decimal) =>\r\n      assetAmount(amount.times(isBigNumberValue(v) ? v : v.amount()), d),\r\n    div: (v: BigNumber.Value | AssetAmount, d: number = decimal) =>\r\n      assetAmount(amount.div(isBigNumberValue(v) ? v : v.amount()), d),\r\n    lt: (v: BigNumber.Value | AssetAmount) => amount.lt(isBigNumberValue(v) ? v : v.amount()),\r\n    lte: (v: BigNumber.Value | AssetAmount) => amount.lte(isBigNumberValue(v) ? v : v.amount()),\r\n    gt: (v: BigNumber.Value | AssetAmount) => amount.gt(isBigNumberValue(v) ? v : v.amount()),\r\n    gte: (v: BigNumber.Value | AssetAmount) => amount.gte(isBigNumberValue(v) ? v : v.amount()),\r\n    eq: (v: BigNumber.Value | AssetAmount) => amount.eq(isBigNumberValue(v) ? v : v.amount()),\r\n    decimal,\r\n  }\r\n}\r\n\r\n/**\r\n * Factory to create base amounts (e.g. tor)\r\n *\r\n * @param {string|number|BigNumber|undefined} value - The base amount, If the value is undefined, BaseAmount with value `0` will be returned.\r\n * @param {number} decimal The decimal places of its associated AssetAmount. (optional)\r\n * @returns {BaseAmount} The base amount from the given value and decimal.\r\n **/\r\nexport const baseAmount = (value: BigNumber.Value | undefined, decimal: number = ASSET_DECIMAL): BaseAmount => {\r\n  const amount = fixedBN(value, 0)\r\n  return {\r\n    type: Denomination.Base,\r\n    amount: () => amount,\r\n    plus: (v: BigNumber.Value | BaseAmount, d: number = decimal) =>\r\n      baseAmount(amount.plus(isBigNumberValue(v) ? v : v.amount()), d),\r\n    minus: (v: BigNumber.Value | BaseAmount, d: number = decimal) =>\r\n      baseAmount(amount.minus(isBigNumberValue(v) ? v : v.amount()), d),\r\n    times: (v: BigNumber.Value | BaseAmount, d: number = decimal) =>\r\n      baseAmount(amount.times(isBigNumberValue(v) ? v : v.amount()), d),\r\n    div: (v: BigNumber.Value | BaseAmount, d: number = decimal) =>\r\n      baseAmount(amount.div(isBigNumberValue(v) ? v : v.amount()).decimalPlaces(0, BigNumber.ROUND_DOWN), d),\r\n    lt: (v: BigNumber.Value | BaseAmount) => amount.lt(isBigNumberValue(v) ? v : v.amount()),\r\n    lte: (v: BigNumber.Value | BaseAmount) => amount.lte(isBigNumberValue(v) ? v : v.amount()),\r\n    gt: (v: BigNumber.Value | BaseAmount) => amount.gt(isBigNumberValue(v) ? v : v.amount()),\r\n    gte: (v: BigNumber.Value | BaseAmount) => amount.gte(isBigNumberValue(v) ? v : v.amount()),\r\n    eq: (v: BigNumber.Value | BaseAmount) => amount.eq(isBigNumberValue(v) ? v : v.amount()),\r\n    decimal,\r\n  }\r\n}\r\n\r\n/**\r\n * Helper to convert values for a asset from base values (e.g. RUNE from tor)\r\n *\r\n * @param {BaseAmount} base\r\n * @returns {AssetAmount} The asset amount from the given base amount.\r\n * */\r\nexport const baseToAsset = (base: BaseAmount): AssetAmount => {\r\n  const decimal = base.decimal\r\n  const value = base\r\n    .amount()\r\n    .div(10 ** decimal)\r\n    .decimalPlaces(decimal)\r\n  return assetAmount(value, decimal)\r\n}\r\n\r\n/**\r\n * Helper to convert asset to base values (e.g. tor -> RUNE)\r\n *\r\n * @param {AssetAmount} asset\r\n * @returns {BaseAmount} The base amount from the given AssetAmount.\r\n * */\r\nexport const assetToBase = (asset: AssetAmount): BaseAmount => {\r\n  const value = asset\r\n    .amount()\r\n    .multipliedBy(10 ** asset.decimal)\r\n    .integerValue()\r\n  return baseAmount(value, asset.decimal)\r\n}\r\n\r\n/**\r\n * Guard to check whether value is an amount of asset or not\r\n *\r\n * @param {Amount<Denomination>} v\r\n * @returns {boolean} `true` or `false`.\r\n * */\r\nexport const isAssetAmount = (v: Amount<Denomination>): v is AssetAmount => v.type === Denomination.Asset\r\n\r\n/**\r\n * Guard to check whether value is an amount of a base value or not\r\n *\r\n * @param {Amount<Denomination>} v\r\n * @returns {boolean} `true` or `false`.\r\n * */\r\nexport const isBaseAmount = (v: Amount<Denomination>): v is BaseAmount => v.type === Denomination.Base\r\n\r\n/**\r\n * Formats an `AssetAmount` into `string` based on decimal places\r\n *\r\n * If `decimal` is not set, `amount.decimal` is used\r\n * Note: `trimZeros` wins over `decimal`\r\n *\r\n * @param {Params} param The asset amount format options.\r\n * @returns {string} The formatted asset amount string from the given options.\r\n */\r\nexport const formatAssetAmount = ({\r\n  amount,\r\n  decimal,\r\n  trimZeros = false,\r\n}: {\r\n  amount: AssetAmount\r\n  decimal?: number\r\n  trimZeros?: boolean\r\n}) => {\r\n  // strict check for `undefined` value as negate of 0 will return true and passed decimal value will be ignored\r\n  const formatted = formatBN(amount.amount(), decimal === undefined ? amount.decimal : decimal)\r\n  // Note: `trimZeros` wins over `decimal`\r\n  return trimZeros ? trimZerosHelper(formatted) : formatted\r\n}\r\n\r\n/**\r\n * Formats a `BaseAmount` value into a `string`\r\n *\r\n * @param {BaseAmount} amount\r\n * @returns {string} The formatted base amount string from the given base amount.\r\n */\r\nexport const formatBaseAmount = (amount: BaseAmount) => formatBN(amount.amount(), 0)\r\n\r\n/**\r\n * Base \"chain\" asset of Binance chain.\r\n *\r\n * Based on definition in Thorchain `common`\r\n * @see https://gitlab.com/thorchain/thornode/-/blob/master/common/asset.go#L12-24\r\n */\r\nexport const AssetBNB: Asset = { chain: Chain.Binance, symbol: 'BNB', ticker: 'BNB', synth: false }\r\n\r\n/**\r\n * Base \"chain\" asset on bitcoin main net.\r\n *\r\n * Based on definition in Thorchain `common`\r\n * @see https://gitlab.com/thorchain/thornode/-/blob/master/common/asset.go#L12-24\r\n */\r\nexport const AssetBTC: Asset = { chain: Chain.Bitcoin, symbol: 'BTC', ticker: 'BTC', synth: false }\r\n\r\n/**\r\n * Base \"chain\" asset on bitcoin cash main net.\r\n *\r\n * Based on definition in Thorchain `common`\r\n * @see https://gitlab.com/thorchain/thornode/-/blob/master/common/asset.go#L12-24\r\n */\r\nexport const AssetBCH: Asset = { chain: Chain.BitcoinCash, symbol: 'BCH', ticker: 'BCH', synth: false }\r\n\r\n/**\r\n * Base \"chain\" asset on litecoin main net.\r\n *\r\n * Based on definition in Thorchain `common`\r\n * @see https://gitlab.com/thorchain/thornode/-/blob/master/common/asset.go#L12-24\r\n */\r\nexport const AssetLTC: Asset = { chain: Chain.Litecoin, symbol: 'LTC', ticker: 'LTC', synth: false }\r\n/**\r\n * Dogecoin asset\r\n * Based on definition in Thorchain\r\n * @see https://gitlab.com/thorchain/thornode/-/blob/781-add-doge-chain/common/asset.go#L24\r\n */\r\nexport const AssetDOGE: Asset = { chain: Chain.Doge, symbol: 'DOGE', ticker: 'DOGE', synth: false }\r\n\r\nexport const RUNE_TICKER = 'RUNE'\r\n\r\n/**\r\n * Base \"chain\" asset on ethereum main net.\r\n *\r\n * Based on definition in Thorchain `common`\r\n * @see https://gitlab.com/thorchain/thornode/-/blob/master/common/asset.go#L12-24\r\n */\r\nexport const AssetETH: Asset = { chain: Chain.Ethereum, symbol: 'ETH', ticker: 'ETH', synth: false }\r\n\r\n/**\r\n * Base \"chain\" asset for RUNE-67C on Binance test net.\r\n *\r\n * Based on definition in Thorchain `common`\r\n * @see https://gitlab.com/thorchain/thornode/-/blob/master/common/asset.go#L12-24\r\n */\r\nexport const AssetRune67C: Asset = { chain: Chain.Binance, symbol: 'RUNE-67C', ticker: RUNE_TICKER, synth: false }\r\n\r\n/**\r\n * Base \"chain\" asset for RUNE-B1A on Binance main net.\r\n *\r\n * Based on definition in Thorchain `common`\r\n * @see https://gitlab.com/thorchain/thornode/-/blob/master/common/asset.go#L12-24\r\n */\r\nexport const AssetRuneB1A: Asset = { chain: Chain.Binance, symbol: 'RUNE-B1A', ticker: RUNE_TICKER, synth: false }\r\n\r\n/**\r\n * Base \"chain\" asset on thorchain main net.\r\n *\r\n * Based on definition in Thorchain `common`\r\n * @see https://gitlab.com/thorchain/thornode/-/blob/master/common/asset.go#L12-24\r\n */\r\nexport const AssetRuneNative: Asset = { chain: Chain.THORChain, symbol: RUNE_TICKER, ticker: RUNE_TICKER, synth: false }\r\n\r\n/**\r\n * Base \"chain\" asset for RUNE on ethereum main net.\r\n *\r\n * Based on definition in Thorchain `common`\r\n * @see https://gitlab.com/thorchain/thornode/-/blob/master/common/asset.go#L12-24\r\n */\r\nexport const AssetRuneERC20: Asset = {\r\n  chain: Chain.Ethereum,\r\n  symbol: `${RUNE_TICKER}-0x3155ba85d5f96b2d030a4966af206230e46849cb`,\r\n  ticker: RUNE_TICKER,\r\n  synth: false,\r\n}\r\n\r\n/**\r\n * Base \"chain\" asset for RUNE on ethereum main net.\r\n *\r\n * Based on definition in Thorchain `common`\r\n * @see https://gitlab.com/thorchain/thornode/-/blob/master/common/asset.go#L12-24\r\n */\r\nexport const AssetRuneERC20Testnet: Asset = {\r\n  chain: Chain.Ethereum,\r\n  symbol: `${RUNE_TICKER}-0xd601c6A3a36721320573885A8d8420746dA3d7A0`,\r\n  ticker: RUNE_TICKER,\r\n  synth: false,\r\n}\r\n\r\n/**\r\n * Helper to check whether asset is valid\r\n *\r\n * @param {Asset} asset\r\n * @returns {boolean} `true` or `false`\r\n */\r\nexport const isValidAsset = (asset: Asset): boolean => !!asset.chain && !!asset.ticker && !!asset.symbol\r\n\r\n/**\r\n * Helper to check whether an asset is synth asset\r\n *\r\n * @param {Asset} asset\r\n * @returns {boolean} `true` or `false`\r\n */\r\nexport const isSynthAsset = ({ synth }: Asset): boolean => synth\r\n\r\nconst SYNTH_DELIMITER = '/'\r\nconst NON_SYNTH_DELIMITER = '.'\r\n\r\n/**\r\n * Creates an `Asset` by a given string\r\n *\r\n * This helper function expects a string with following naming convention:\r\n * `AAA.BBB-CCC`\r\n * where\r\n * chain: `AAA`\r\n * ticker (optional): `BBB`\r\n * symbol: `BBB-CCC` or `CCC` (if no ticker available)\r\n *\r\n * @see  https://docs.thorchain.org/developers/transaction-memos#asset-notation\r\n *\r\n * If the naming convention fails, it returns null\r\n *\r\n * @param {string} s The given string.\r\n * @returns {Asset|null} The asset from the given string.\r\n */\r\nexport const assetFromString = (s: string): Asset | null => {\r\n  const isSynth = s.includes(SYNTH_DELIMITER)\r\n  const delimiter = isSynth ? SYNTH_DELIMITER : NON_SYNTH_DELIMITER\r\n  const data = s.split(delimiter)\r\n  if (data.length <= 1 || data[1]?.length < 1) {\r\n    return null\r\n  }\r\n\r\n  const chain = data[0]\r\n  // filter out not supported string of chains\r\n  if (!chain || !isChain(chain)) return null\r\n\r\n  const symbol = data[1]\r\n  const ticker = symbol.split('-')[0]\r\n\r\n  return { chain, symbol, ticker, synth: isSynth }\r\n}\r\n\r\n/**\r\n * Returns an `Asset` as a string using following naming convention:\r\n *\r\n * `AAA.BBB-CCC`\r\n * where\r\n * chain: `AAA`\r\n * ticker (optional): `BBB`\r\n * symbol: `BBB-CCC` or `CCC` (if no ticker available)\r\n * symbol (synth): `BBB/CCC` or `CCC` (if no ticker available)\r\n *\r\n * @see https://docs.thorchain.org/developers/transaction-memos#asset-notation\r\n *\r\n * @param {Asset} asset The given asset.\r\n * @returns {string} The string from the given asset.\r\n */\r\nexport const assetToString = ({ chain, symbol, synth }: Asset) => {\r\n  const delimiter = synth ? SYNTH_DELIMITER : NON_SYNTH_DELIMITER\r\n  return `${chain}${delimiter}${symbol}`\r\n}\r\n\r\n/**\r\n * Currency symbols currently supported\r\n */\r\nexport enum AssetCurrencySymbol {\r\n  RUNE = 'แฑ',\r\n  BTC = 'โฟ',\r\n  SATOSHI = 'โก',\r\n  ETH = 'ฮ',\r\n  USD = '$',\r\n}\r\n\r\n/**\r\n * Returns currency symbols by given `Asset`\r\n *\r\n * @param {Asset} asset The given asset.\r\n * @returns {string} The currency symbol from the given asset.\r\n */\r\nexport const currencySymbolByAsset = ({ ticker }: Asset) => {\r\n  switch (true) {\r\n    case ticker === RUNE_TICKER:\r\n      return AssetCurrencySymbol.RUNE\r\n    case ticker === AssetBTC.ticker:\r\n      return AssetCurrencySymbol.BTC\r\n    case ticker === AssetETH.ticker:\r\n      return AssetCurrencySymbol.ETH\r\n    case ticker.includes('USD') || ticker.includes('UST'):\r\n      return AssetCurrencySymbol.USD\r\n    default:\r\n      return ticker\r\n  }\r\n}\r\n\r\n/**\r\n * Formats an asset amount using its currency symbol\r\n *\r\n * If `decimal` is not set, `amount.decimal` is used\r\n * If `asset` is not set, `$` will be used as currency symbol by default\r\n * `trimZeros` is `false` by default\r\n * Note: `trimZeros` wins over `decimal`\r\n *\r\n * @param {Params} params The asset amount currency format options.\r\n * @return {string} The formatted asset amount string using its currency format.\r\n */\r\nexport const formatAssetAmountCurrency = ({\r\n  amount,\r\n  asset,\r\n  decimal,\r\n  trimZeros: shouldTrimZeros = false,\r\n}: {\r\n  amount: AssetAmount\r\n  asset?: Asset\r\n  decimal?: number\r\n  trimZeros?: boolean\r\n}) => {\r\n  const amountFormatted = formatAssetAmount({\r\n    amount,\r\n    // strict check for `undefined` value as negate of 0 will return true and passed decimal value will be ignored\r\n    decimal: decimal === undefined ? amount.decimal : decimal,\r\n    trimZeros: shouldTrimZeros,\r\n  })\r\n  const ticker = asset?.ticker ?? ''\r\n\r\n  if (ticker) {\r\n    // RUNE\r\n    if (ticker === RUNE_TICKER) return `${AssetCurrencySymbol.RUNE} ${amountFormatted}`\r\n    // BTC\r\n    let regex = new RegExp(AssetBTC.ticker, 'i')\r\n    if (ticker.match(new RegExp(AssetBTC.ticker, 'i'))) {\r\n      const base = assetToBase(amount)\r\n      // format all < โฟ 0.01 in statoshi\r\n      if (base.amount().isLessThanOrEqualTo('1000000')) {\r\n        return `${AssetCurrencySymbol.SATOSHI} ${formatBaseAmount(base)}`\r\n      }\r\n      return `${AssetCurrencySymbol.BTC} ${amountFormatted}`\r\n    }\r\n    // ETH\r\n    regex = new RegExp(AssetETH.ticker, 'i')\r\n    if (ticker.match(regex)) return `${AssetCurrencySymbol.ETH} ${amountFormatted}`\r\n    // USD\r\n    regex = new RegExp('USD', 'i')\r\n    if (ticker.match('USD')) return `${AssetCurrencySymbol.USD} ${amountFormatted}`\r\n\r\n    return `${amountFormatted} ${ticker}`\r\n  }\r\n\r\n  return `$ ${amountFormatted}`\r\n}\r\n\r\n/**\r\n * Formats a `BaseAmount` into a string of an `AssetAmount`\r\n *\r\n * If `decimal` is not set, `amount.decimal` is used\r\n * Note: `trimZeros` wins over `decimal`\r\n *\r\n * @param {Params} params The base amount currency format options.\r\n * @return {string} The formatted base amount string using its currency format.\r\n */\r\nexport const formatBaseAsAssetAmount = ({\r\n  amount,\r\n  decimal,\r\n  trimZeros = false,\r\n}: {\r\n  amount: BaseAmount\r\n  decimal?: number\r\n  trimZeros?: boolean\r\n}) => formatAssetAmount({ amount: baseToAsset(amount), decimal, trimZeros })\r\n\r\n/**\r\n * Checks equality of two `Assets`\r\n * @param {Asset} a Asset one\r\n * @param {Asset} b Asset two\r\n * @return {boolean} Result of equality check\r\n */\r\nexport const eqAsset = (a: Asset, b: Asset) =>\r\n  a.chain === b.chain && a.symbol === b.symbol && a.ticker === b.ticker && a.synth === b.synth\r\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","import { Network } from '@xchainjs/xchain-client'\r\nconst axios = require('axios')\r\nimport { Chain } from './chain'\r\nimport { InboundDetail, ServerInboundDetail } from './types'\r\n\r\nconst midgardBaseUrls: { [key: string]: Array<string> } = {\r\n  [Network.Testnet]: ['https://testnet.midgard.thorchain.info'],\r\n  [Network.Mainnet]: ['https://midgard.ninerealms.com', 'https://midgard.thorswap.net'],\r\n}\r\n\r\nexport const getMimirDetails = async (network = Network.Mainnet) => {\r\n  const path = '/v2/thorchain/mimir'\r\n\r\n  for (const baseUrl of midgardBaseUrls[network]) {\r\n    try {\r\n      const { data } = await axios.get(`${baseUrl}${path}`)\r\n      return data\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }\r\n\r\n  throw new Error('Midgard not responding')\r\n}\r\n\r\nexport const getAllInboundDetails = async (network = Network.Mainnet): Promise<Array<ServerInboundDetail>> => {\r\n  const path = '/v2/thorchain/inbound_addresses'\r\n\r\n  for (const baseUrl of midgardBaseUrls[network]) {\r\n    try {\r\n      const { data } = await axios.get(`${baseUrl}${path}`)\r\n      return data\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }\r\n\r\n  throw new Error('Midgard not responding')\r\n}\r\n\r\nexport const getInboundDetails = async (chain: Chain, network = Network.Mainnet): Promise<InboundDetail> => {\r\n  const [mimirDetails, allInboundDetails] = await Promise.all([getMimirDetails(network), getAllInboundDetails(network)])\r\n  const inboundDetail = allInboundDetails?.find((item: ServerInboundDetail) => item.chain === chain)\r\n\r\n  const details: InboundDetail = {\r\n    vault: inboundDetail?.address || '',\r\n    haltedChain: inboundDetail?.halted || !!mimirDetails[`HALT${chain}CHAIN`] || !!mimirDetails['HALTCHAINGLOBAL'],\r\n    haltedTrading: !!mimirDetails['HALTTRADING'] || !!mimirDetails[`HALT${chain}TRADING`],\r\n    haltedLP: !!mimirDetails['PAUSELP'] || !!mimirDetails[`PAUSELP${chain}`],\r\n  }\r\n\r\n  if (inboundDetail?.router) details.router = inboundDetail.router\r\n\r\n  return details\r\n}\r\n"],"names":["BigNumber","Chain","Denomination","trimZeros","trimZerosHelper","AssetCurrencySymbol","Network"],"mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;MAkBa,KAAK,GAAG,CAAC,EAAU,KAAK,IAAI,OAAO,CAAC,CAAC,OAAO,KAAK,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC;;AChBrF;;;;;;MAMM,EAAE,GAAG,CAAC,KAAsB,KAAK,IAAIA,6BAAS,CAAC,KAAK,EAAC;AAE3D;;;;;;MAMa,SAAS,GAAG,CAAC,KAAgB,KAAK,CAAC,KAAK,CAAC,KAAK,GAAE;AAE7D;;;;;;;MAOa,QAAQ,GAAG,CAAC,KAAkC;IACzD,MAAM,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;IACnC,OAAO,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;AACjC,EAAC;AAED;;;;;;;MAOa,aAAa,GAAG,CAAC,KAA4B,MAAM,KAAK,IAAI,SAAS,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,EAAC;AAE1G;;;;;;;MAOa,QAAQ,GAAG,CAAC,KAAgB,EAAE,OAAO,GAAG,CAAC,KAAK,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAC;AAElF;;;;AAIA,IAAY,cAGX;AAHD,WAAY,cAAc;IACxB,mCAAiB,CAAA;IACjB,iCAAe,CAAA;AACjB,CAAC,EAHW,cAAc,KAAd,cAAc,QAGzB;AACD;;;;;;;;;MASa,gBAAgB,GAAG,CAC9B,CAAY,EACZ,aAAa,GAAG,CAAC,EACjB,MAAM,GAAG,GAAG,EACZ,WAA2B,cAAc,CAAC,MAAM;IAEhD,MAAM,KAAK,GAAG,QAAQ,CAAC,CAAC,EAAE,aAAa,CAAC,CAAA;IACxC,IAAI,QAAQ,KAAK,cAAc,CAAC,MAAM,EAAE;QACtC,OAAO,GAAG,MAAM,GAAG,KAAK,EAAE,CAAA;KAC3B;IACD,OAAO,GAAG,KAAK,GAAG,MAAM,EAAE,CAAA;AAC5B,EAAC;AAED;;;;;;;;MAQa,OAAO,GAAG,CAAC,KAAkC,EAAE,aAAa,GAAG,CAAC;IAC3E,MAAM,CAAC,GAAG,EAAE,CAAC,KAAK,IAAI,CAAC,CAAC,CAAA;IACxB,MAAM,OAAO,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,CAAA;IACtF,OAAO,EAAE,CAAC,OAAO,CAAC,CAAA;AACpB;;AC1FA,WAAY,KAAK;IACf,wBAAe,CAAA;IACf,wBAAe,CAAA;IACf,yBAAgB,CAAA;IAChB,2BAAkB,CAAA;IAClB,wBAAe,CAAA;IACf,2BAAkB,CAAA;IAClB,4BAAmB,CAAA;IACnB,yBAAgB,CAAA;IAChB,wBAAe,CAAA;IACf,sBAAa,CAAA;AACf,CAAC,EAXWC,aAAK,KAALA,aAAK,QAWhB;MAEY,QAAQ,GAAGA,aAAK,CAAC,QAAO;MACxB,QAAQ,GAAGA,aAAK,CAAC,QAAO;MACxB,QAAQ,GAAGA,aAAK,CAAC,SAAQ;MACzB,SAAS,GAAGA,aAAK,CAAC,UAAS;MAC3B,WAAW,GAAGA,aAAK,CAAC,OAAM;MAC1B,aAAa,GAAGA,aAAK,CAAC,SAAQ;MAC9B,QAAQ,GAAGA,aAAK,CAAC,YAAW;MAC5B,QAAQ,GAAGA,aAAK,CAAC,SAAQ;MACzB,UAAU,GAAGA,aAAK,CAAC,MAAK;MACxB,SAAS,GAAGA,aAAK,CAAC,KAAI;AAEnC;;;;;;MAMa,OAAO,GAAG,CAAC,CAAS,KAAkB,MAAM,CAAC,MAAM,CAACA,aAAK,CAAc,CAAC,QAAQ,CAAC,CAAC,EAAC;AAEhG;;;;;;MAMa,aAAa,GAAyD,MAAM,CAAC,MAAM,CAC9F,CAAC,OAAc;IACb,IAAI,EAAE,OAAO,IAAI,aAAa,CAAC;QAAE,OAAO,eAAe,CAAA;IACvD,OAAO,aAAa,CAAC,OAAO,CAAC,CAAA;AAC/B,CAAC,EACD;IACE,CAACA,aAAK,CAAC,SAAS,GAAG,WAAW;IAC9B,CAACA,aAAK,CAAC,OAAO,GAAG,SAAS;IAC1B,CAACA,aAAK,CAAC,WAAW,GAAG,cAAc;IACnC,CAACA,aAAK,CAAC,QAAQ,GAAG,UAAU;IAC5B,CAACA,aAAK,CAAC,QAAQ,GAAG,UAAU;IAC5B,CAACA,aAAK,CAAC,OAAO,GAAG,eAAe;IAChC,CAACA,aAAK,CAAC,MAAM,GAAG,QAAQ;IACxB,CAACA,aAAK,CAAC,QAAQ,GAAG,UAAU;IAC5B,CAACA,aAAK,CAAC,KAAK,GAAG,OAAO;IACtB,CAACA,aAAK,CAAC,IAAI,GAAG,UAAU;CACzB;;ACtDH;;;;;;;;MAQa,SAAS,GAAG,CAAC,KAAa,KACrC,KAAK;;KAEF,OAAO,CAAC,0BAA0B,EAAE,IAAI,CAAC;;KAEzC,OAAO,CAAC,uBAAuB,EAAE,IAAI;;ACX1C,WAAY,YAAY;;;;IAItB,6BAAa,CAAA;;;;IAIb,+BAAe,CAAA;AACjB,CAAC,EATWC,oBAAY,KAAZA,oBAAY;;ACKxB;;;;;;MAMa,gBAAgB,GAAG,CAAC,CAAU,KACzC,OAAO,CAAC,KAAK,QAAQ,IAAI,OAAO,CAAC,KAAK,QAAQ,IAAI,CAAC,YAAYF,8BAAS;AAE1E;;;;;;;;;;AAUA,MAAM,aAAa,GAAG,CAAC,CAAA;AAEvB;;;;;;;;MAQa,WAAW,GAAG,CAAC,KAAkC,EAAE,UAAkB,aAAa;IAC7F,MAAM,MAAM,GAAG,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,CAAA;IACtC,OAAO;QACL,IAAI,EAAEE,oBAAY,CAAC,KAAK;QACxB,MAAM,EAAE,MAAM,MAAM;QACpB,IAAI,EAAE,CAAC,CAAgC,EAAE,IAAY,OAAO,KAC1D,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;QACnE,KAAK,EAAE,CAAC,CAAgC,EAAE,IAAY,OAAO,KAC3D,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;QACpE,KAAK,EAAE,CAAC,CAAgC,EAAE,IAAY,OAAO,KAC3D,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;QACpE,GAAG,EAAE,CAAC,CAAgC,EAAE,IAAY,OAAO,KACzD,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;QAClE,EAAE,EAAE,CAAC,CAAgC,KAAK,MAAM,CAAC,EAAE,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;QACzF,GAAG,EAAE,CAAC,CAAgC,KAAK,MAAM,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;QAC3F,EAAE,EAAE,CAAC,CAAgC,KAAK,MAAM,CAAC,EAAE,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;QACzF,GAAG,EAAE,CAAC,CAAgC,KAAK,MAAM,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;QAC3F,EAAE,EAAE,CAAC,CAAgC,KAAK,MAAM,CAAC,EAAE,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;QACzF,OAAO;KACR,CAAA;AACH,EAAC;AAED;;;;;;;MAOa,UAAU,GAAG,CAAC,KAAkC,EAAE,UAAkB,aAAa;IAC5F,MAAM,MAAM,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,CAAA;IAChC,OAAO;QACL,IAAI,EAAEA,oBAAY,CAAC,IAAI;QACvB,MAAM,EAAE,MAAM,MAAM;QACpB,IAAI,EAAE,CAAC,CAA+B,EAAE,IAAY,OAAO,KACzD,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;QAClE,KAAK,EAAE,CAAC,CAA+B,EAAE,IAAY,OAAO,KAC1D,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;QACnE,KAAK,EAAE,CAAC,CAA+B,EAAE,IAAY,OAAO,KAC1D,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;QACnE,GAAG,EAAE,CAAC,CAA+B,EAAE,IAAY,OAAO,KACxD,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,EAAEF,6BAAS,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QACxG,EAAE,EAAE,CAAC,CAA+B,KAAK,MAAM,CAAC,EAAE,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;QACxF,GAAG,EAAE,CAAC,CAA+B,KAAK,MAAM,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;QAC1F,EAAE,EAAE,CAAC,CAA+B,KAAK,MAAM,CAAC,EAAE,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;QACxF,GAAG,EAAE,CAAC,CAA+B,KAAK,MAAM,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;QAC1F,EAAE,EAAE,CAAC,CAA+B,KAAK,MAAM,CAAC,EAAE,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;QACxF,OAAO;KACR,CAAA;AACH,EAAC;AAED;;;;;;MAMa,WAAW,GAAG,CAAC,IAAgB;IAC1C,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAA;IAC5B,MAAM,KAAK,GAAG,IAAI;SACf,MAAM,EAAE;SACR,GAAG,CAAC,SAAA,EAAE,EAAI,OAAO,CAAA,CAAC;SAClB,aAAa,CAAC,OAAO,CAAC,CAAA;IACzB,OAAO,WAAW,CAAC,KAAK,EAAE,OAAO,CAAC,CAAA;AACpC,EAAC;AAED;;;;;;MAMa,WAAW,GAAG,CAAC,KAAkB;IAC5C,MAAM,KAAK,GAAG,KAAK;SAChB,MAAM,EAAE;SACR,YAAY,CAAC,SAAA,EAAE,EAAI,KAAK,CAAC,OAAO,CAAA,CAAC;SACjC,YAAY,EAAE,CAAA;IACjB,OAAO,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,CAAA;AACzC,EAAC;AAED;;;;;;MAMa,aAAa,GAAG,CAAC,CAAuB,KAAuB,CAAC,CAAC,IAAI,KAAKE,oBAAY,CAAC,MAAK;AAEzG;;;;;;MAMa,YAAY,GAAG,CAAC,CAAuB,KAAsB,CAAC,CAAC,IAAI,KAAKA,oBAAY,CAAC,KAAI;AAEtG;;;;;;;;;MASa,iBAAiB,GAAG,CAAC,EAChC,MAAM,EACN,OAAO,aACPC,WAAS,GAAG,KAAK,GAKlB;;IAEC,MAAM,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,OAAO,KAAK,SAAS,GAAG,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,CAAA;;IAE7F,OAAOA,WAAS,GAAGC,SAAe,CAAC,SAAS,CAAC,GAAG,SAAS,CAAA;AAC3D,EAAC;AAED;;;;;;MAMa,gBAAgB,GAAG,CAAC,MAAkB,KAAK,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EAAC;AAEpF;;;;;;MAMa,QAAQ,GAAU,EAAE,KAAK,EAAEH,aAAK,CAAC,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,GAAE;AAEnG;;;;;;MAMa,QAAQ,GAAU,EAAE,KAAK,EAAEA,aAAK,CAAC,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,GAAE;AAEnG;;;;;;MAMa,QAAQ,GAAU,EAAE,KAAK,EAAEA,aAAK,CAAC,WAAW,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,GAAE;AAEvG;;;;;;MAMa,QAAQ,GAAU,EAAE,KAAK,EAAEA,aAAK,CAAC,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,GAAE;AACpG;;;;;MAKa,SAAS,GAAU,EAAE,KAAK,EAAEA,aAAK,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,GAAE;MAEtF,WAAW,GAAG,OAAM;AAEjC;;;;;;MAMa,QAAQ,GAAU,EAAE,KAAK,EAAEA,aAAK,CAAC,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,GAAE;AAEpG;;;;;;MAMa,YAAY,GAAU,EAAE,KAAK,EAAEA,aAAK,CAAC,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,KAAK,GAAE;AAElH;;;;;;MAMa,YAAY,GAAU,EAAE,KAAK,EAAEA,aAAK,CAAC,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,KAAK,GAAE;AAElH;;;;;;MAMa,eAAe,GAAU,EAAE,KAAK,EAAEA,aAAK,CAAC,SAAS,EAAE,MAAM,EAAE,WAAW,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,KAAK,GAAE;AAExH;;;;;;MAMa,cAAc,GAAU;IACnC,KAAK,EAAEA,aAAK,CAAC,QAAQ;IACrB,MAAM,EAAE,GAAG,WAAW,6CAA6C;IACnE,MAAM,EAAE,WAAW;IACnB,KAAK,EAAE,KAAK;EACb;AAED;;;;;;MAMa,qBAAqB,GAAU;IAC1C,KAAK,EAAEA,aAAK,CAAC,QAAQ;IACrB,MAAM,EAAE,GAAG,WAAW,6CAA6C;IACnE,MAAM,EAAE,WAAW;IACnB,KAAK,EAAE,KAAK;EACb;AAED;;;;;;MAMa,YAAY,GAAG,CAAC,KAAY,KAAc,CAAC,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC,KAAK,CAAC,OAAM;AAExG;;;;;;MAMa,YAAY,GAAG,CAAC,EAAE,KAAK,EAAS,KAAc,MAAK;AAEhE,MAAM,eAAe,GAAG,GAAG,CAAA;AAC3B,MAAM,mBAAmB,GAAG,GAAG,CAAA;AAE/B;;;;;;;;;;;;;;;;;MAiBa,eAAe,GAAG,CAAC,CAAS;;IACvC,MAAM,OAAO,GAAG,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAA;IAC3C,MAAM,SAAS,GAAG,OAAO,GAAG,eAAe,GAAG,mBAAmB,CAAA;IACjE,MAAM,IAAI,GAAG,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAA;IAC/B,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAA,MAAA,IAAI,CAAC,CAAC,CAAC,0CAAE,MAAM,IAAG,CAAC,EAAE;QAC3C,OAAO,IAAI,CAAA;KACZ;IAED,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAA;;IAErB,IAAI,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAAE,OAAO,IAAI,CAAA;IAE1C,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAA;IACtB,MAAM,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;IAEnC,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,CAAA;AAClD,EAAC;AAED;;;;;;;;;;;;;;;MAea,aAAa,GAAG,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAS;IAC3D,MAAM,SAAS,GAAG,KAAK,GAAG,eAAe,GAAG,mBAAmB,CAAA;IAC/D,OAAO,GAAG,KAAK,GAAG,SAAS,GAAG,MAAM,EAAE,CAAA;AACxC,EAAC;AAKD,WAAY,mBAAmB;IAC7B,sCAAU,CAAA;IACV,qCAAS,CAAA;IACT,yCAAa,CAAA;IACb,qCAAS,CAAA;IACT,gCAAS,CAAA;AACX,CAAC,EANWI,2BAAmB,KAAnBA,2BAAmB,QAM9B;AAED;;;;;;MAMa,qBAAqB,GAAG,CAAC,EAAE,MAAM,EAAS;IACrD,QAAQ,IAAI;QACV,KAAK,MAAM,KAAK,WAAW;YACzB,OAAOA,2BAAmB,CAAC,IAAI,CAAA;QACjC,KAAK,MAAM,KAAK,QAAQ,CAAC,MAAM;YAC7B,OAAOA,2BAAmB,CAAC,GAAG,CAAA;QAChC,KAAK,MAAM,KAAK,QAAQ,CAAC,MAAM;YAC7B,OAAOA,2BAAmB,CAAC,GAAG,CAAA;QAChC,KAAK,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC;YACnD,OAAOA,2BAAmB,CAAC,GAAG,CAAA;QAChC;YACE,OAAO,MAAM,CAAA;KAChB;AACH,EAAC;AAED;;;;;;;;;;;MAWa,yBAAyB,GAAG,CAAC,EACxC,MAAM,EACN,KAAK,EACL,OAAO,EACP,SAAS,EAAE,eAAe,GAAG,KAAK,GAMnC;;IACC,MAAM,eAAe,GAAG,iBAAiB,CAAC;QACxC,MAAM;;QAEN,OAAO,EAAE,OAAO,KAAK,SAAS,GAAG,MAAM,CAAC,OAAO,GAAG,OAAO;QACzD,SAAS,EAAE,eAAe;KAC3B,CAAC,CAAA;IACF,MAAM,MAAM,GAAG,MAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,MAAM,mCAAI,EAAE,CAAA;IAElC,IAAI,MAAM,EAAE;;QAEV,IAAI,MAAM,KAAK,WAAW;YAAE,OAAO,GAAGA,2BAAmB,CAAC,IAAI,IAAI,eAAe,EAAE,CAAA;;QAEnF,IAAI,KAAK,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,CAAA;QAC5C,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,EAAE;YAClD,MAAM,IAAI,GAAG,WAAW,CAAC,MAAM,CAAC,CAAA;;YAEhC,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC,mBAAmB,CAAC,SAAS,CAAC,EAAE;gBAChD,OAAO,GAAGA,2BAAmB,CAAC,OAAO,IAAI,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAA;aAClE;YACD,OAAO,GAAGA,2BAAmB,CAAC,GAAG,IAAI,eAAe,EAAE,CAAA;SACvD;;QAED,KAAK,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,CAAA;QACxC,IAAI,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC;YAAE,OAAO,GAAGA,2BAAmB,CAAC,GAAG,IAAI,eAAe,EAAE,CAAA;;QAE/E,KAAK,GAAG,IAAI,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAA;QAC9B,IAAI,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC;YAAE,OAAO,GAAGA,2BAAmB,CAAC,GAAG,IAAI,eAAe,EAAE,CAAA;QAE/E,OAAO,GAAG,eAAe,IAAI,MAAM,EAAE,CAAA;KACtC;IAED,OAAO,KAAK,eAAe,EAAE,CAAA;AAC/B,EAAC;AAED;;;;;;;;;MASa,uBAAuB,GAAG,CAAC,EACtC,MAAM,EACN,OAAO,EACP,SAAS,GAAG,KAAK,GAKlB,KAAK,iBAAiB,CAAC,EAAE,MAAM,EAAE,WAAW,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,EAAC;AAE5E;;;;;;MAMa,OAAO,GAAG,CAAC,CAAQ,EAAE,CAAQ,KACxC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC;;AClczF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAuDA;AACO,SAAS,SAAS,CAAC,OAAO,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE;AAC7D,IAAI,SAAS,KAAK,CAAC,KAAK,EAAE,EAAE,OAAO,KAAK,YAAY,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC,UAAU,OAAO,EAAE,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;AAChH,IAAI,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,EAAE,UAAU,OAAO,EAAE,MAAM,EAAE;AAC/D,QAAQ,SAAS,SAAS,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;AACnG,QAAQ,SAAS,QAAQ,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;AACtG,QAAQ,SAAS,IAAI,CAAC,MAAM,EAAE,EAAE,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,EAAE;AACtH,QAAQ,IAAI,CAAC,CAAC,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9E,KAAK,CAAC,CAAC;AACP;;AC5EA,MAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAA;AAI9B,MAAM,eAAe,GAAqC;IACxD,CAACC,oBAAO,CAAC,OAAO,GAAG,CAAC,wCAAwC,CAAC;IAC7D,CAACA,oBAAO,CAAC,OAAO,GAAG,CAAC,gCAAgC,EAAE,8BAA8B,CAAC;CACtF,CAAA;MAEY,eAAe,GAAG,CAAO,OAAO,GAAGA,oBAAO,CAAC,OAAO;IAC7D,MAAM,IAAI,GAAG,qBAAqB,CAAA;IAElC,KAAK,MAAM,OAAO,IAAI,eAAe,CAAC,OAAO,CAAC,EAAE;QAC9C,IAAI;YACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,GAAG,OAAO,GAAG,IAAI,EAAE,CAAC,CAAA;YACrD,OAAO,IAAI,CAAA;SACZ;QAAC,OAAO,CAAC,EAAE;YACV,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;SACjB;KACF;IAED,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAA;AAC3C,CAAC,EAAA;MAEY,oBAAoB,GAAG,CAAO,OAAO,GAAGA,oBAAO,CAAC,OAAO;IAClE,MAAM,IAAI,GAAG,iCAAiC,CAAA;IAE9C,KAAK,MAAM,OAAO,IAAI,eAAe,CAAC,OAAO,CAAC,EAAE;QAC9C,IAAI;YACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,GAAG,OAAO,GAAG,IAAI,EAAE,CAAC,CAAA;YACrD,OAAO,IAAI,CAAA;SACZ;QAAC,OAAO,CAAC,EAAE;YACV,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;SACjB;KACF;IAED,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAA;AAC3C,CAAC,EAAA;MAEY,iBAAiB,GAAG,CAAO,KAAY,EAAE,OAAO,GAAGA,oBAAO,CAAC,OAAO;IAC7E,MAAM,CAAC,YAAY,EAAE,iBAAiB,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;IACtH,MAAM,aAAa,GAAG,iBAAiB,aAAjB,iBAAiB,uBAAjB,iBAAiB,CAAE,IAAI,CAAC,CAAC,IAAyB,KAAK,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,CAAA;IAElG,MAAM,OAAO,GAAkB;QAC7B,KAAK,EAAE,CAAA,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,OAAO,KAAI,EAAE;QACnC,WAAW,EAAE,CAAA,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,MAAM,KAAI,CAAC,CAAC,YAAY,CAAC,OAAO,KAAK,OAAO,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,iBAAiB,CAAC;QAC9G,aAAa,EAAE,CAAC,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,OAAO,KAAK,SAAS,CAAC;QACrF,QAAQ,EAAE,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,UAAU,KAAK,EAAE,CAAC;KACzE,CAAA;IAED,IAAI,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,MAAM;QAAE,OAAO,CAAC,MAAM,GAAG,aAAa,CAAC,MAAM,CAAA;IAEhE,OAAO,OAAO,CAAA;AAChB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}